name: "Build and upload static Nix binaries"

on:
  push:
    paths:
      - flake.nix
      - flake.lock
      - nix-static-bins.nix
      - nixpkgs-darwin-static.nix

jobs:
# Support on hold pending upstream bintools fixes
#  precompile-bitrise:
#    name: Build macOS-specific derivations on Bitrise
#    runs-on: ubuntu-latest
#    if: github.ref == 'refs/heads/master'
#    steps:
#      - name: Wake up Bitrise
#        uses: llaine/hans-landa@0.5
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          bitrise_app_slug: fa692dd0b84f09a9
#          bitrise_build_trigger_token: ${{ secrets.BITRISE_TOKEN }}
#          bitrise_workflow: primary
#      - name: Wait for Bitrise to complete
#        uses: fountainhead/action-wait-for-check@v1.1.0
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}
#          checkName: ci/bitrise/fa692dd0b84f09a9/push

  build-linux-arm:
    name: Build ARM Linux binaries
    runs-on: ubuntu-latest
    environment: Cachix
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run AArch64 environment
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: aarch64
          distro: ubuntu_latest
          githubToken: ${{ github.token }}
          run: |
            export INPUT_EXTRA_NIX_CONFIG=
            export INPUT_INSTALL_OPTIONS=
            export INPUT_NIX_PATH=
            export GITHUB_PATH=/dev/null
            export GITHUB_ENV=/dev/null
            apt-get -q -y update
            apt-get -q -y install curl sudo xz-utils git
            curl -L https://raw.githubusercontent.com/cachix/install-nix-action/master/install-nix.sh | bash
            source /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
            export CACHIX_AUTH_TOKEN=${{ secrets.CACHIX_AUTH_TOKEN }}
            nix profile install "nixpkgs#cachix"
            nix build --print-out-paths --accept-flake-config ".#static-bins.aarch64-linux-nix-static" | cachix push nix-wrap

  assemble-linux:
    name: Build Linux binaries and merge derivation
    runs-on: ubuntu-latest
    needs: build-linux-arm #precompile-bitrise
    environment: Cachix
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Nix
        uses: cachix/install-nix-action@v20
      - name: Set up Cachix access
        uses: cachix/cachix-action@v12
        with:
          name: nix-wrap
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - run: nix build .#static-bins
